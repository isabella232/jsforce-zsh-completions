#compdef jsforce-retrieve

function _jsforce-retrieve() {
  local context curcontext=$curcontext state line
  typeset -A opt_args
  local ret=1

  _arguments -C \
    '(-h --help)'{-h,--help}'[Output usage information]' \
    '(-V --version)'{-V,--version}'[Output the version number]' \
    '(-c --connection -u --username -p --password -l --loginUrl --sandbox)'{-c,--connection}'[Connection name stored in connection registry]: :__connections' \
    '(-u --username -c --connection)'{-u,--username}'[Salesforce username]: :' \
    '(-p --password -c --connection)'{-p,--password}'[Salesforce password (and security token, if available)]: :' \
    '(-l --loginUrl --sandbox -c --connection)'{-l,--loginUrl}'[<loginUrl> Salesforce login url]: :((production\:"Use production login server (login.salesforce.com)" sandbox\:"Using sandbox login server (test.salesforce.com)"))' \
    '(--sandbox -l --loginUrl -c --connection)--sandbox[Login to Salesforce sandbox]' \
    '(-D --directory -Z --zipFile --pid)'{-D,--directory}'[Directory path to extract the retrieved metadata files]: :_files -/' \
    '(-Z --zipFile -D --directory --pid)'{-Z,--zipFile}'[Output file path of ZIP archive of retrieved metadata]: :_files' \
    '(-P --packageXML --apiVersion --packageNames --memberTypes)'{-P,--packageXML}'[A package.xml file path to specify the retrieving metadata contents]: :_files' \
    '(--apiVersion --packageXML)--apiVersion[API version of retrieving package]: :' \
    '(--packageNames --packageXML --memberTypes)--packageNames[List of package names to retrieve (comma separated)]: :' \
    '(--memberTypes --packageXML --packageNames)--memberTypes[List of package names to retrieve (comma separated)]: :' \
    '(--pollTimeout --pid)--pollTimeout[Polling timeout in millisec (default is 60000ms)]: :' \
    '(--pollInterval --pid)--pollInterval[Polling interval in millisec (default is 5000ms)]: :' \
    '(--verbose)--verbose[Output execution detail log]' \
    '(-)*:arguments:->args' \
    && ret=0

  case $state in
    (args)
      ;;
  esac

  return ret
}

__connections() {
  local -a _c
  local _config_path="${HOME}/.jsforce/config.json"
  _c=(
    ${(@f)"$(cat "$_config_path" | jq -r '(.connections | keys)[]')"}
  )
  _describe -t commands connections _c
}

_jsforce-retrieve "$@"
